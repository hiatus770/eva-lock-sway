# This is the build file for project "waylandplaying"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

# Rules for linking.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/hiatus/Documents/waylandplaying .
 description = Regenerating build files
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build xdg-shell-client-protocol.h: CUSTOM_COMMAND //usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml | /usr/bin/wayland-scanner
 COMMAND = /usr/bin/wayland-scanner client-header //usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml xdg-shell-client-protocol.h
 description = Generating$ xdg-shell-client-protocol.h$ with$ a$ custom$ command

build xdg-shell-protocol.c: CUSTOM_COMMAND //usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml | /usr/bin/wayland-scanner
 COMMAND = /usr/bin/wayland-scanner private-code //usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml xdg-shell-protocol.c
 description = Generating$ xdg-shell-protocol.c$ with$ a$ custom$ command

build waylandplaying.p/meson-generated_.._xdg-shell-protocol.c.o: c_COMPILER xdg-shell-protocol.c
 DEPFILE = waylandplaying.p/meson-generated_.._xdg-shell-protocol.c.o.d
 DEPFILE_UNQUOTED = waylandplaying.p/meson-generated_.._xdg-shell-protocol.c.o.d
 ARGS = -Iwaylandplaying.p -I. -I.. -I../include -I../src -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -O0 -g -pthread

build waylandplaying.p/src_main.c.o: c_COMPILER ../src/main.c
 DEPFILE = waylandplaying.p/src_main.c.o.d
 DEPFILE_UNQUOTED = waylandplaying.p/src_main.c.o.d
 ARGS = -Iwaylandplaying.p -I. -I.. -I../include -I../src -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -O0 -g -pthread

build waylandplaying.p/src_shader.c.o: c_COMPILER ../src/shader.c
 DEPFILE = waylandplaying.p/src_shader.c.o.d
 DEPFILE_UNQUOTED = waylandplaying.p/src_shader.c.o.d
 ARGS = -Iwaylandplaying.p -I. -I.. -I../include -I../src -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -O0 -g -pthread

build waylandplaying.p/src_glad.c.o: c_COMPILER ../src/glad.c
 DEPFILE = waylandplaying.p/src_glad.c.o.d
 DEPFILE_UNQUOTED = waylandplaying.p/src_glad.c.o.d
 ARGS = -Iwaylandplaying.p -I. -I.. -I../include -I../src -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -O0 -g -pthread

build waylandplaying.p/src_graphics.c.o: c_COMPILER ../src/graphics.c
 DEPFILE = waylandplaying.p/src_graphics.c.o.d
 DEPFILE_UNQUOTED = waylandplaying.p/src_graphics.c.o.d
 ARGS = -Iwaylandplaying.p -I. -I.. -I../include -I../src -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -O0 -g -pthread

build waylandplaying.p/src_camera.c.o: c_COMPILER ../src/camera.c
 DEPFILE = waylandplaying.p/src_camera.c.o.d
 DEPFILE_UNQUOTED = waylandplaying.p/src_camera.c.o.d
 ARGS = -Iwaylandplaying.p -I. -I.. -I../include -I../src -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sysprof-6 -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wextra -std=c99 -O0 -g -pthread

build waylandplaying: c_LINKER waylandplaying.p/meson-generated_.._xdg-shell-protocol.c.o waylandplaying.p/src_main.c.o waylandplaying.p/src_shader.c.o waylandplaying.p/src_glad.c.o waylandplaying.p/src_graphics.c.o waylandplaying.p/src_camera.c.o | /usr/lib/libEGL.so /usr/lib/libGLESv2.so /usr/lib/libdl.a /usr/lib/libfreetype.so /usr/lib/libm.a /usr/lib/libm.so /usr/lib/libpthread.a /usr/lib/librt.a /usr/lib/libwayland-client.so /usr/lib/libwayland-egl.so /usr/lib/libxkbcommon.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,--start-group /usr/lib/libwayland-client.so /usr/lib/libwayland-egl.so /usr/lib/libEGL.so /usr/lib/libGLESv2.so /usr/lib/libxkbcommon.so /usr/lib/libfreetype.so -lm -lrt -ldl -lpthread -Wl,--end-group

# Test rules

build test: phony meson-internal__test

build meson-internal__test: CUSTOM_COMMAND all meson-test-prereq PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests
 pool = console

build benchmark: phony meson-internal__benchmark

build meson-internal__benchmark: CUSTOM_COMMAND all meson-benchmark-prereq PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite
 pool = console

# Install rules

build install: phony meson-internal__install

build meson-internal__install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build dist: phony meson-internal__dist

build meson-internal__dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

# Suffix

build scan-build: phony meson-internal__scan-build

build meson-internal__scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal scanbuild /home/hiatus/Documents/waylandplaying /home/hiatus/Documents/waylandplaying/build subprojects /usr/bin/meson setup
 pool = console

build uninstall: phony meson-internal__uninstall

build meson-internal__uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build all: phony waylandplaying

build meson-test-prereq: phony 

build meson-benchmark-prereq: phony 

build clean: phony meson-internal__clean

build clean-ctlist: phony meson-internal__clean-ctlist

build meson-internal__clean-ctlist: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal cleantrees /home/hiatus/Documents/waylandplaying/build/meson-private/cleantrees.dat
 description = Cleaning$ custom$ target$ directories

build meson-internal__clean: CUSTOM_COMMAND PHONY | clean-ctlist
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

default all

